<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>net80;</TargetFrameworks>
    <Configurations>Debug;Release;Build</Configurations>
  </PropertyGroup>

  <PropertyGroup>
    <AssemblyVersion>0.1.0.1</AssemblyVersion>
    <FileVersion>0.4.5</FileVersion>
    <VersionPrefix>0.4.5</VersionPrefix>
    <VersionSuffix></VersionSuffix>
    <Authors>Brian Friesen</Authors>
    <Company>Quicken Loans</Company>
    <Product>XSerializer</Product>
    <Description>XML
XSerializer's XML serialization handles properties and types that the System.Xml.Serialization.XmlSerializer does not handle, such as interfaces and dictionaries. It is meant to be a drop-in replacement for the BCL XmlSerializer - it uses the same attributes: [XmlElement], [XmlAttribute], etc.

JSON
JSON serialization in XSerializer has better performance than JSON.NET (Newtonsoft). It also has better support for deserialization into a variable or field of type dynamic.

Encryption
XSerializer's XML and JSON serializers support the concept of field-level encryption. Properties that are decorated with an [Encrypt] attribute have their values encrypted/decrypted automatically. The actual mechanism to encrypt these fields is exposed through the IEncryptionMechanism interface - users of the encrypt feature are expected to implement this interface in their project.</Description>
    <Copyright>Copyright © Quicken Loans 2013-2018</Copyright>
    <Summary>Advanced, high-performance XML and JSON serializers</Summary>
    <NeutralLanguage>en-US</NeutralLanguage>
    <Title>XSerializer - Serialize *anything*</Title>
    <PackageId>XSerializer</PackageId>
    <PackageTags>xmlserializer xmlserialization xmlserialize serializer serialization serialize xml interface dynamic dictionary jsonserializer jsonserialization jsonserialize json encrypted encryption</PackageTags>
    <PackageIconUrl>https://raw.githubusercontent.com/QuickenLoans/XSerializer/master/XSerializer/XSerializerLogo.png</PackageIconUrl>
    <PackageProjectUrl>https://github.com/QuickenLoans/XSerializer</PackageProjectUrl>
    <PackageLicenseUrl>https://github.com/QuickenLoans/XSerializer/blob/master/LICENSE.md</PackageLicenseUrl>
    <PackageRequireLicenseAcceptance>false</PackageRequireLicenseAcceptance>
    <PackageReleaseNotes></PackageReleaseNotes>
    <RepositoryUrl>https://github.com/QuickenLoans/XSerializer</RepositoryUrl>
    <RepositoryType>git</RepositoryType>
    <RootNamespace>XSerializer</RootNamespace>
    <AssemblyName>XSerializer</AssemblyName>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <PublishRepositoryUrl>True</PublishRepositoryUrl>
    <EmbedUntrackedSources>True</EmbedUntrackedSources>
    <DebugType>Embedded</DebugType>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)'=='BUILD'">
    <ContinuousIntegrationBuild>true</ContinuousIntegrationBuild>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.SourceLink.GitHub" Version="1.0.0" PrivateAssets="All" />
  </ItemGroup>

  <PropertyGroup Condition="'$(Configuration)'=='Build'">
    <AssemblyOriginatorKeyFile>XSerializer.snk</AssemblyOriginatorKeyFile>
    <SignAssembly>true</SignAssembly>
  </PropertyGroup>

  <ItemGroup Condition="'$(TargetFramework)'=='netstandard2.0'">
    <PackageReference Include="System.Xml.XmlSerializer" Version="4.3.0" />
    <PackageReference Include="Microsoft.CSharp" Version="4.4.0" />
  </ItemGroup>

  <ItemGroup Condition="'$(TargetFramework)'=='net40'">
    <Reference Include="Microsoft.CSharp" />
  </ItemGroup>

</Project>